import asyncio
import logging
import os
import time
from threading import Timer

import asyncpg
import psycopg2
import telebot
from prettyprinter import pprint
from telebot import types

logging.basicConfig(level = logging.DEBUG)
logger = logging.getLogger(__name__)

token = os.environ.get('TOKEN')

bot = telebot.TeleBot(token)

database = os.environ.get('DATABASE')
user = os.environ.get('USER')
password = os.environ.get('PASSWORD')
host = os.environ.get('HOST')
port = os.environ.get('PORT')

conn = psycopg2.connect(
    database = f"{database}", 
    user = f"{user}", 
    password = f"{password}", 
    host = f"{host}", 
    port = "5432"
)

cursor = conn.cursor()

yes = {'yes': 0}
no = {'no': 0}

@bot.message_handler(commands = ['start', '—Å—Ç–∞—Ä—Ç', '–°—Ç–∞—Ä—Ç'], content_types = ['text'])
def send_welcome(message):
    
    if message.chat.id != -1001366701849: #–ø–æ–º—ñ–Ω—è—Ç–∏ –∞–π–¥–∏ —á–∞—Ç–∞ –Ω–∞ —Ç–æ–π —è–∫–∏–π –±—É–¥–µ 
        bot.send_message(message.chat.id, '''
        –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /request —á—Ç–æ –±—ã –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è 
        ''')

@bot.message_handler(commands = ['admin'])
def admin(message):
    
    if message.from_user.id == 618042376:
        print(f'\nMessage.chat: {message.chat}\n')
        print(f'Message: {message}\n')
    else:
        bot.send_message(message.chat.id, "–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å")

def create_button(text1, text2):
    button = types.InlineKeyboardMarkup()
    button.add(types.InlineKeyboardButton(text = text1, callback_data = 'yes'), types.InlineKeyboardButton(text = text2, callback_data = 'no'))
    return button

@bot.message_handler(commands = ['request', '–ó–∞–ø—Ä–æ—Å', '–∑–∞–ø—Ä–æ—Å'])
def send_request(message):
    
    global user_data
    global delete

    try:
        
        user_data = message.from_user

        cursor.execute(f'SELECT user_id FROM public."main_BD" WHERE user_id = \'{user_data.id}\';')
        userinbd = cursor.fetchone()
        conn.commit()

        #–ø–æ–º—ñ–Ω—è—Ç–∏ –∞–π–¥–∏ —á–∞—Ç–∞ –Ω–∞ —Ç–æ–π —è–∫–∏–π –±—É–¥–µ
        if message.chat.id != -1001366701849 and userinbd is None:
            delete = bot.send_message(-1001366701849, f''' 
        –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø –≤ –≥—Ä—É–ø—É –≤—ñ–¥ —á–º–∏—Ä—è @{message.from_user.username}

    –ü–æ–≥–∞–Ω—è–ª–æ: {message.from_user.first_name}

–ù–∞ —Ä–æ–∑–¥—É–ø–ª–µ–Ω–Ω—è 10 —Ö–≤.''', reply_markup = create_button('–•–∞–π –±—É–¥–µ','–ü–∞—à–æ–ª –Ω–∞—Ö—É–π'))

            bot.send_message(message.chat.id, '''
            –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –±—ã–ª–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ. –û–∂–∏–¥–∞–π—Ç–µ!
            ''')
            cursor.execute(f'INSERT INTO public."main_BD"(user_id) VALUES (\'{user_data.id}\');')
            conn.commit()
            
            Timer(600, check).start()
            
        else:
            bot.send_message(message.chat.id, '''–í–∏ –≤–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É''')
    
    except Exception as e:
        bot.send_message(618042376, f'–û—à–∏–±–∫–∞ –≤ send_request: {e}')
    

@bot.callback_query_handler(func = lambda call: True)
def callback_inline(call):

    global user_data

    if call.data == 'yes':
        yes.update({'yes': yes['yes'] + 1})
        y1 = yes['yes']
        n1 = no['no']
        
        bot.edit_message_text(
            chat_id = call.message.chat.id,
            message_id = call.message.message_id,
            text = f''' 
        –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø –≤ –≥—Ä—É–ø—É –≤—ñ–¥ —á–º–∏—Ä—è @{user_data.username}

    –ü–æ–≥–∞–Ω—è–ª–æ: {user_data.first_name}

–ù–∞ —Ä–æ–∑–¥—É–ø–ª–µ–Ω–Ω—è 10 —Ö–≤.''',
            reply_markup = create_button(f'–•–∞–π –±—É–¥–µ {y1}', f'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π {n1}'),
            parse_mode = 'Markdown')
        

    elif call.data == 'no':
        no.update({'no': no['no'] + 1})
        y2 = yes['yes']
        n2 = no['no']

        bot.edit_message_text(
            chat_id = call.message.chat.id,
            message_id = call.message.message_id,
            text = f''' 
        –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø –≤ –≥—Ä—É–ø—É –≤—ñ–¥ —á–º–∏—Ä—è @{user_data.username}

    –ü–æ–≥–∞–Ω—è–ª–æ: {user_data.first_name}

–ù–∞ —Ä–æ–∑–¥—É–ø–ª–µ–Ω–Ω—è 10 —Ö–≤.''',
            reply_markup = create_button(f'–•–∞–π –±—É–¥–µ {y2}', f'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π {n2}'),
            parse_mode = 'Markdown')
    
    #print('Y', yes)
    #print('N', no)

def check():
    try:
        if yes['yes'] > no['no']:
        
            bot.send_message(user_data.id, f'üéâ –í—ñ—Ç–∞—é üéâ\n–ë–∞–≥–∞—Ç–æ –Ω–µ –≤–∏–π–æ–±—É–π—Å—è –±–æ –∫—ñ–∫–Ω–µ–º–æ ü§°ü§°ü§°\n–ü—Ä–æ—è–≤–ª—è–π—Ç–µ –∞–∫—Ç–∏–≤.\n\n[–¢–∏–∫–∞–π —Å—é–¥–∞ –¥–æ–ª–±–æ–µ–±](https://t.me/joinchat/KkYqCRiVvkdluMTmPY7kIQ)', parse_mode = 'Markdown')
            bot.delete_message(-1001366701849, message_id = delete.id) #–ø–æ–º—ñ–Ω—è—Ç–∏ –∞–π–¥–∏ —á–∞—Ç–∞ –Ω–∞ —Ç–æ–π —è–∫–∏–π –±—É–¥–µ 
        
            yes.clear()
            no.clear()
            yes.update({'yes': 0})
            no.update({'no': 0})
    
        elif yes['yes'] < no['no']:
        
            bot.send_message(user_data.id, '–ï—Ö... –í–∏ –ø—ñ—à–ª–∏ –Ω–∞—Ö—É–π!!!')
            bot.delete_message(-1001366701849, message_id = delete.id) #–ø–æ–º—ñ–Ω—è—Ç–∏ –∞–π–¥–∏ —á–∞—Ç–∞ –Ω–∞ —Ç–æ–π —è–∫–∏–π –±—É–¥–µ 
        
            yes.clear()
            no.clear()
            yes.update({'yes': 0})
            no.update({'no': 0})
    
        elif yes['yes'] == no['no']:
        
            bot.delete_message(-1001366701849, message_id = delete.id) #–ø–æ–º—ñ–Ω—è—Ç–∏ –∞–π–¥–∏ —á–∞—Ç–∞ –Ω–∞ —Ç–æ–π —è–∫–∏–π –±—É–¥–µ 
            bot.send_message(user_data.id, '–ú—ñ—à–∞, –≤—Å—å–æ —Ö—É–π–Ω—è, –¥–∞–≤–∞–π –ø–æ–Ω–æ–≤–æ–π')
            
            yes.clear()
            no.clear()
            yes.update({'yes': 0})
            no.update({'no': 0})
            
            cursor.execute(f'DELETE FROM public."main_BD" WHERE user_id = \'{user_data.id}\';')
            conn.commit()
    
    except Exception as e:
        print(f'–û—à–∏–±–∫–∞ –≤ check: {e}')
        

if __name__ == "__main__":
    bot.polling(none_stop = True, interval = 0)
